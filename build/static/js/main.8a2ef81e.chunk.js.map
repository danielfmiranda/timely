{"version":3,"sources":["components/NavBar.jsx","components/LogInPage.jsx","components/EmployeeHomePage.jsx","components/EmployeeProfileCard.jsx","components/AdminHomePage.jsx","components/HomePageContainer.jsx","components/EmployeeProfile.jsx","components/Router.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","logOutButtonClick","e","props","history","push","Navbar","bg","variant","expand","to","Brand","Nav","className","this","logged_in","Button","onClick","size","Component","withRouter","LogInPage","handle_login","data","preventDefault","axios","post","process","username","password","then","response","logInResponse","localStorage","setItem","token","console","log","setState","catch","error","removeItem","handle_change","name","target","value","prevstate","newState","state","api","email","Card","text","style","width","Header","Body","Text","Form","onSubmit","Group","Label","Control","placeholder","onChange","controlId","type","EmployeeHomePage","getUserInfo","get","headers","getItem","currentUserInfo","first_name","profile_id","id","is_loading","finally","getProfileInfo","params","profile","clockIn","todaysDate","require","moment","format","timeEntryData","latest_time_entry_id","time_entry_id","employeeProfileUpdateData","patch","clockOut","todaysDateAndTime","clockOutData","current_shift","time_entries","clocked_in","disabled","Accordion","map","timeEntryInfo","date","clock_in","clock_out","late","Toggle","as","eventKey","Collapse","Alert","EmployeeProfileCard","is_super_user","employee_id","color","last_name","AdminHomePage","getEmployeeInfo","employeeData","employee","employeeInfo","HomePageContainer","is_superuser","EmployeeProfile","hello","deleteTimeEntry","time_entry","JSON","stringify","delete","match","goBack","Router","exact","path","render","component","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a2ef81e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport PropTypes from 'prop-types';\nimport Nav from 'react-bootstrap/Nav';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport {withRouter} from \"react-router-dom\";\nimport '../css/NavBar.css';\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\nconst BUILD_VERSION = process.env.REACT_APP_PROJECT_ENV;\n\nclass NavBar extends Component {\n\n\n    //takes you back to homepage, which removes token AKA logging you out\n    logOutButtonClick = (e) => {\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div>\n\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                    <LinkContainer to=\"/home\">\n                        <Navbar.Brand>Timely</Navbar.Brand>\n                    </LinkContainer>\n                    <Nav className={\"mr-auto\"}>\n\n\n                    </Nav>\n\n                    { BUILD_VERSION == \"Development\" ? ( <Badge className={\"devFlag\"} variant=\"info\">Development</Badge>) : null }\n\n                    {this.props.logged_in == true ? (\n                        <Button onClick={this.logOutButtonClick} variant=\"outline-primary\" size=\"sm\">\n                            Log Out\n                        </Button>) : (null)}\n\n\n                </Navbar>\n\n\n            </div>\n        );\n    }\n}\n\nNavBar.propTypes = {};\n\nexport default withRouter(NavBar);","import React, {Component} from 'react';\nimport '../css/LogInPage.css';\nimport NavBar from \"./NavBar\";\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from \"axios\";\nimport {withRouter} from \"react-router-dom\";\n\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\n\n\nclass LogInPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            username: '',\n            password: '',\n            api: 'http://localhost:8000/'\n        }\n\n    }\n\n    componentDidMount() {\n        localStorage.removeItem('token');\n    }\n\n    handle_login = (e, data) => {\n        e.preventDefault();\n        axios.post(`${BASE_API_URL}auth-get-token/`, {\n            username: data.username,\n            password: data.password\n        })\n            .then((response) => {\n                let logInResponse = response.data\n                localStorage.setItem('token', logInResponse.token)\n                console.log(logInResponse);\n                this.setState({\n                    logged_in: true,\n                })\n                this.props.history.push(\"/home\");\n            })\n            .catch((error) => {\n                localStorage.removeItem('token');\n                console.log(error);\n                this.setState(\n                    {error: true}\n                )\n            });\n    };\n\n\n    handle_change = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = {...prevstate};\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n\n    submitForm(e) {\n        e.preventDefault();\n        console.log(`Email: ${this.state.email}`)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <NavBar logged_in={false}/>\n                <Card className=\"logInFormCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n\n                    <Card.Header>\n\n                        <h1> Welcome to Timely! </h1>\n                    </Card.Header>\n\n                    <Card.Body>\n                        <Card.Text>\n                            Please log in:\n                        </Card.Text>\n                        <div className={\"logInForm\"}>\n                            <Form onSubmit={e => this.handle_login(e, this.state)}>\n                                <Form.Group>\n                                    <Form.Label>Username</Form.Label>\n                                    <Form.Control placeholder=\"Enter username\" name=\"username\"\n                                                  value={this.state.username}\n                                                  onChange={this.handle_change}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\"\n                                                  value={this.state.password} onChange={this.handle_change}\n                                    />\n                                </Form.Group>\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Submit\n                                </Button>\n                            </Form>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(LogInPage);","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/EmployeeHomePage.css';\nimport NavBar from \"./NavBar\";\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport Moment from 'react-moment';\nimport Alert from 'react-bootstrap/Alert'\nimport axios from \"axios\";\nimport Collapse from 'react-bootstrap/Collapse'\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass EmployeeHomePage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            api: 'http://localhost:8000/',\n            logged_in: localStorage.getItem('token') ? true : false,\n            profile: {\n                time_entries: ['']\n            }\n        }\n\n        var moment = require('moment');\n    }\n\n    componentDidMount() {\n        if (this.state.logged_in === true) {\n            this.getUserInfo();\n\n\n        } else {\n            this.setState({is_loading: false});\n        }\n\n    }\n\n    getUserInfo = () => {\n\n        axios.get(`${BASE_API_URL}timely_backend/current_user/`, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                let currentUserInfo = response.data;\n                this.setState({\n                    first_name: currentUserInfo.first_name,\n                    profile_id: currentUserInfo.id,\n                    is_loading: false,\n                });\n\n            })\n            .finally(() => {\n                this.getProfileInfo();\n            });\n    };\n\n    getProfileInfo = () => {\n        axios.get(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, {\n            params: {}\n        })\n        //setting profile information in state\n            .then(response => {\n                let profile = response.data;\n                this.setState({profile: profile}); //preferredName = profile['preferred_name']\n            })\n            //if theres an error console log it\n            .catch(error => {\n                console.log(error);\n            })\n            //After everything, set is-loading to false (removes loading spinner)\n            .finally(() => {\n                this.setState({is_loading: false});\n\n            });\n\n\n    }\n\n\n    clockIn = () => {\n        var moment = require('moment');\n        let todaysDate = moment().format('YYYY-MM-DD')\n        console.log(todaysDate);\n        let employee_id = this.state.profile_id;\n\n\n        let timeEntryData = {\n            \"date\": todaysDate,\n            \"late\": false,\n            \"employee\": employee_id,\n            // \"proficiency_rating\": rating,\n        }\n\n        console.log(timeEntryData)\n        axios.post(`${BASE_API_URL}api/time_entries/`, timeEntryData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                console.log(response);\n                this.setState({\n                    latest_time_entry_id: response.data.time_entry_id\n\n                })\n\n            })\n\n\n            .finally((response) => {\n                let employeeProfileUpdateData = {\n                    \"clocked_in\": true,\n                    \"current_shift\": this.state.latest_time_entry_id\n                    // \"proficiency_rating\": rating,\n                }\n                axios.patch(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, employeeProfileUpdateData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n                    .then((response) => {\n                        console.log(response);\n                        this.getProfileInfo();\n\n                    })\n\n                    .catch((error) => {\n                        console.log(error);\n                        console.log(error.response);\n                    });\n\n\n            })\n    }\n\n\n    clockOut = () => {\n        var moment = require('moment');\n        let todaysDateAndTime = moment();\n        console.log(todaysDateAndTime);\n\n        let clockOutData = {\n            \"clock_out\": todaysDateAndTime,\n        }\n        axios.patch(`${BASE_API_URL}api/time_entries/${this.state.profile.current_shift}/`, clockOutData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                console.log(response);\n\n            })\n            .finally((response) => {\n                let employeeProfileUpdateData = {\n                    \"clocked_in\": false,\n                    \"current_shift\": this.state.latest_time_entry_id\n                    // \"proficiency_rating\": rating,\n                }\n                axios.patch(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, employeeProfileUpdateData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n                    .then((response) => {\n                        console.log(response);\n                        this.getProfileInfo();\n\n                    })\n\n                    .catch((error) => {\n                        console.log(error);\n                        console.log(error.response);\n                    });\n\n\n            })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <NavBar logged_in={this.state.logged_in}/>\n                {this.state.logged_in === true ? (\n                        <Card className=\"logInFormCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n                            <Card.Header><h3> Welcome to Timely, {this.state.first_name}! </h3></Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    Please select what you would like to do:\n                                </Card.Text>\n                                <div className={\"timeEntryButtons\"}>\n                                    <div className={\"timeEntryButtonsContainer\"}>\n                                        {this.state.profile.clocked_in == true ? (\n                                            <Button variant=\"primary\" size=\"lg\" disabled>\n                                                Clocked In\n                                            </Button>) : (\n                                            <Button onClick={this.clockIn} className={\"timeEntryButton\"} variant=\"primary\"\n                                                    size=\"lg\">\n                                                Clock In\n                                            </Button>)}\n\n                                        <Button onClick={this.clockOut} className={\"timeEntryButton\"} variant=\"secondary\"\n                                                size=\"lg\">\n                                            Clock Out\n                                        </Button>\n                                    </div>\n                                </div>\n                                <div className={\"previousShifts\"}>\n                                    <h1> Previous Shifts: </h1>\n                                    <Accordion className={\"timeEntryAccordion\"}>\n\n                                        {this.state.profile.time_entries.map(timeEntryInfo => {\n                                            const {date, clock_in, clock_out, late, time_entry_id} = timeEntryInfo;\n\n                                            return (\n\n                                                <Card>\n                                                    <Accordion.Toggle date={date} clock_in={clock_in}\n                                                                      clock_out={clock_out} late={late}\n                                                                      time_entry_id={time_entry_id} as={Card.Header}\n                                                                      eventKey={time_entry_id}>\n                                                        <Moment\n                                                            format=\"MM/DD/YYYY\">{date}</Moment>\n                                                    </Accordion.Toggle>\n                                                    <Accordion.Collapse eventKey={time_entry_id}>\n                                                        <Card.Body>\n                                                            <div className={\"timeEntryDetailContainer\"}>\n                                                                <div className={\"clockIn timeEntryDetail\"}>\n                                                                    <h6><b> Clock In:</b></h6>\n                                                                    <Moment\n                                                                        format=\"hh:mm A\">{clock_in}</Moment>\n                                                                </div>\n                                                                <div className={\"clockOut timeEntryDetail\"}>\n                                                                    <h6><b> Clock Out:</b></h6>\n                                                                    { clock_out == null? (<p> Pending </p> ) : ( <Moment\n                                                                        format=\"hh:mm A\">{clock_out}</Moment>) }\n\n\n                                                                </div>\n                                                                <div className={\"late timeEntryDetail\"}>\n\n                                                                    {`${this.props.late}` == true ? (\n                                                                        <div className={'alertContainer'}>\n                                                                            <Alert className={\"lateAlert\"}\n                                                                                   variant={'danger'}>\n                                                                                Late\n                                                                            </Alert>\n                                                                        </div>) : (\n                                                                        <div className={'alertContainer'}><Alert\n                                                                            className={\"lateAlert\"} variant={'info'}>\n                                                                            On Time\n                                                                        </Alert>\n                                                                        </div>)}\n                                                                </div>\n\n                                                            </div>\n                                                        </Card.Body>\n                                                    </Accordion.Collapse>\n                                                </Card>\n\n                                            )\n                                        })}\n                                    </Accordion>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    )\n\n                    : (<Card className=\"logInFormCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n                        <Card.Header>Log-In Required</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                You need to be logged-in to access this page.\n                            </Card.Text>\n                            <LinkContainer to=\"/\">\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Log In\n                                </Button>\n                            </LinkContainer>\n\n                        </Card.Body>\n                    </Card>)\n\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default EmployeeHomePage;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button'\nimport '../css/EmployeeProfileCard.css';\nimport {LinkContainer} from 'react-router-bootstrap';\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass EmployeeProfileCard extends Component {\n    render() {\n        return (\n            <div>\n\n\n                {this.props.is_super_user == \"True\" ? (null) : (\n\n                    <LinkContainer className={\"link\"} to={`/employee/${this.props.employee_id}`}>\n                    <Card className={\"employeeCard\"} bg={\"light\"} style={{color: 'black !important'}}>\n                    <Card.Body>\n                        <div>\n                            <h4> {this.props.first_name} {this.props.last_name} </h4>\n                        </div>\n                    </Card.Body>\n                </Card>\n                    </LinkContainer>\n\n\n\n                )}\n\n            </div>\n        );\n    }\n}\n\nEmployeeProfileCard.propTypes = {};\n\nexport default EmployeeProfileCard;","import React, {Component} from 'react';\nimport NavBar from \"./NavBar\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport '../css/AdminHomePage.css';\nimport EmployeeProfileCard from \"./EmployeeProfileCard\";\n\n\nimport PropTypes from 'prop-types';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\n\nimport axios from \"axios\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Moment from \"react-moment\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass AdminHomePage extends Component {\n\n     constructor(props) {\n        super(props);\n\n        this.state = {\n            api: 'http://localhost:8000/',\n            employeeData:[]\n\n        }\n\n    }\n\n\n    componentDidMount() {\n        this.getEmployeeInfo();\n    }\n\n    getEmployeeInfo = () => {\n\n        axios.get(`${BASE_API_URL}api/employees/`, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                let employeeData = response.data;\n                this.setState({\n                  employeeData: employeeData\n                });\n\n            })\n            .finally(() => {\n                console.log(this.state.employee)\n            });\n    };\n\n\n\n\n    render() {\n        return (\n            <div>\n                <NavBar logged_in={this.props.logged_in}/>\n                <Card className=\"adminPanelCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n                    <Card.Header> <h2> Welcome to Timely Admin, {this.props.first_name} </h2></Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                             <h3> Here is your team: </h3>\n                                <h6> Please select someone to make changes </h6>\n                            </Card.Text>\n\n\n\n\n      {this.state.employeeData.map(employeeInfo => {\n                                            const {first_name, last_name, is_super_user, employee_id} = employeeInfo;\n\n                                            return (\n\n         <EmployeeProfileCard employee_id={employee_id} first_name={first_name} last_name={last_name} is_super_user={is_super_user}/>\n\n                                            )\n                                        })}\n\n\n\n\n                        </Card.Body>\n                    </Card>\n            </div>\n        );\n    }\n}\n\nAdminHomePage.propTypes = {};\n\nexport default AdminHomePage;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/EmployeeHomePage.css';\nimport axios from \"axios\";\nimport EmployeeHomePage from \"./EmployeeHomePage\";\nimport AdminHomePage from \"./AdminHomePage\";\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass HomePageContainer extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            api: 'http://localhost:8000/',\n            logged_in: localStorage.getItem('token') ? true : false,\n            profile: {\n                time_entries: ['']\n            }\n        }\n\n        var moment = require('moment');\n    }\n\n    componentDidMount() {\n        if (this.state.logged_in === true) {\n            this.getUserInfo();\n\n\n        } else {\n            this.setState({is_loading: false});\n        }\n\n    }\n\n    getUserInfo = () => {\n\n        axios.get(`${BASE_API_URL}timely_backend/current_user/`, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                let currentUserInfo = response.data;\n                this.setState({\n                    first_name: currentUserInfo.first_name,\n                    profile_id: currentUserInfo.id,\n                    is_loading: false,\n                    is_super_user: currentUserInfo.is_superuser\n                });\n\n            })\n            .finally(() => {\n                this.getProfileInfo();\n            });\n    };\n\n    getProfileInfo = () => {\n        axios.get(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, {\n            params: {}\n        })\n        //setting profile information in state\n            .then(response => {\n                let profile = response.data;\n                this.setState({profile: profile}); //preferredName = profile['preferred_name']\n            })\n            //if theres an error console log it\n            .catch(error => {\n                console.log(error);\n            })\n            //After everything, set is-loading to false (removes loading spinner)\n            .finally(() => {\n                this.setState({is_loading: false});\n\n            });\n\n\n    }\n\n\n    render() {\n\n        return (\n            <div>\n\n                {this.state.is_super_user == true ? (<AdminHomePage logged_in={this.state.logged_in} first_name={this.state.first_name}\n                />) : (<EmployeeHomePage logged_in={this.state.logged_in}/>)}\n\n            </div>\n        );\n    }\n}\n\n\nexport default HomePageContainer;","import React, {Component} from 'react';\nimport NavBar from \"./NavBar\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button'\n\n\nimport '../css/EmployeeProfile.css';\nimport axios from \"axios\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Moment from \"react-moment\";\nimport Alert from \"react-bootstrap/Alert\";\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass EmployeeProfile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            logged_in: localStorage.getItem('token') ? true : false,\n            api: 'http://localhost:8000/',\n            profile: {\n                time_entries: ['']\n            }\n        }\n\n    }\n\n\n    componentDidMount() {\n  this.getProfileInfo();\n\n\n    }\n\n    hello = () => {\n        console.log(\"HELLO\")\n    }\n\n    deleteTimeEntry = (time_entry_id) => {\n        console.log(time_entry_id);\n        let time_entry = JSON.stringify(time_entry_id);\n        console.log(\"DELETING\")\n         axios.delete(`${BASE_API_URL}api/time_entries/${time_entry}/`, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                console.log(response);\n                this.getProfileInfo();\n    })\n\n    };\n\n    getProfileInfo = () => {\n        const id = this.props.match.params.id;\n            axios.get(`${BASE_API_URL}api/employees/${id}/`, {\n            params: {}\n        })\n        //setting profile information in state\n            .then(response => {\n                console.log(response)\n                let profile = response.data;\n                this.setState({profile: profile}); //preferredName = profile['preferred_name']\n            })\n            //if theres an error console log it\n            .catch(error => {\n                console.log(error);\n            })\n            //After everything, set is-loading to false (removes loading spinner)\n            .finally(() => {\n                this.setState({is_loading: false});\n\n\n            });\n\n    }\n\n    goBack = () => {\n                        this.props.history.push(\"/home\");\n\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar logged_in={this.state.logged_in}/>\n                <Card className=\"logInFormCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n                    <Card.Header>\n                        <h3> Employee Details for: <h1>\n                            <b>{this.state.profile.first_name} {this.state.profile.last_name} </b></h1></h3>\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n\n                            <h4> Please select a time entry to edit: </h4>\n                        </Card.Text>\n\n\n                        <Accordion className={\"timeEntryAccordion\"}>\n\n                            {this.state.profile.time_entries.map(timeEntryInfo => {\n                                const {date, clock_in, clock_out, late, time_entry_id} = timeEntryInfo;\n\n                                return (\n\n                                    <Card>\n                                        <Accordion.Toggle date={date} clock_in={clock_in}\n                                                          clock_out={clock_out} late={late}\n                                                          time_entry_id={time_entry_id} as={Card.Header}\n                                                          eventKey={time_entry_id}>\n                                            <Moment\n                                                format=\"MM/DD/YYYY\">{date}</Moment>\n                                        </Accordion.Toggle>\n                                        <Accordion.Collapse eventKey={time_entry_id}>\n                                            <Card.Body>\n                                                <div className={\"timeEntryDetailContainer\"}>\n                                                    <div className={\"clockIn timeEntryDetail\"}>\n                                                        <h6><b> Clock In:</b></h6>\n                                                        <Moment\n                                                            format=\"hh:mm A\">{clock_in}</Moment>\n                                                    </div>\n                                                    <div onClick={this.hello} className={\"clockOut timeEntryDetail\"}>\n                                                        <h6><b> Clock Out:</b></h6>\n                                                        {clock_out == null ? (<p> Pending </p>) : (<Moment\n                                                            format=\"hh:mm A\">{clock_out}</Moment>)}\n\n\n                                                    </div>\n                                                    <div className={\"late timeEntryDetail\"}>\n\n                                                        {`${this.props.late}` == true ? (\n                                                            <div className={'alertContainer'}>\n                                                                <Alert className={\"lateAlert\"}\n                                                                       variant={'danger'}>\n                                                                    Late\n                                                                </Alert>\n                                                            </div>) : (\n                                                            <div className={'alertContainer'}><Alert\n                                                                className={\"lateAlert\"} variant={'info'}>\n                                                                On Time\n                                                            </Alert>\n\n                                                            </div>\n                                                        )}\n\n                                                    </div>\n                                                    <div className={\"deleteButtonContainer\"}>\n                                                    <Button onClick={(e)=>this.deleteTimeEntry(time_entry_id)} className={\"deleteButton\"} variant=\"danger\"><b>x</b></Button>\n                                                    </div>\n                                                </div>\n                                            </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n\n\n                                )\n                            })}\n                        </Accordion>\n                        <div className={\"goBackButtonContainer\"}>\n                        <Button onClick={this.goBack} className={\"goBackButton\"} variant=\"primary\">Go Back</Button>\n                        </div>\n                    </Card.Body>\n\n                </Card>\n            </div>\n        );\n    }\n}\n\nEmployeeProfile.propTypes = {};\n\nexport default EmployeeProfile;","import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Route, Link, withRouter} from 'react-router-dom';\nimport LogInPage from './LogInPage';\nimport EmployeeHomePage from \"./EmployeeHomePage\";\nimport axios from \"axios\";\nimport HomePageContainer from \"./HomePageContainer\";\n\nimport EmployeeProfile from \"./EmployeeProfile\";\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\nclass Router extends Component {\n    //CHECKING IF THE USER IS LOGGED IN BY CHECKING LOCALSTORAGE FOR TOKEN\n    constructor() {\n        super();\n        this.state = {\n            logged_in: localStorage.getItem('token') ? true : false,\n            is_loading: true,\n            api: 'http://localhost:8000/'\n\n        };\n    }\n\n\n    render() {\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Route\n                        exact\n                        path={\"/\"}\n                        render={props => (\n                            <LogInPage\n                                handle_login={this.handle_login}\n                            />\n                        )}\n                    />\n                    <Route\n                        path={\"/home/\"}\n                        render={props => (\n                            <HomePageContainer\n                                logged_in={this.state.logged_in}\n                            />\n                        )}\n                    />\n                     <Route path={\"/employee/:id\"} component={EmployeeProfile}/>\n\n\n\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default (Router);\n","//css for app.js\n//imports for app.js\nimport React, {Component} from 'react';\nimport Router from './components/Router.jsx';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends Component {\n    //CHECKING IF THE USER IS LOGGED IN BY CHECKING LOCALSTORAGE FOR TOKEN, and true loading spinner on by setting is loading to true\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n\n\n    render() {\n        return (\n           <Router/>\n        // COMMENT TO SEE IF IT WORKS IN STASH\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}