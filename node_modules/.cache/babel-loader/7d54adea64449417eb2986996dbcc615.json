{"ast":null,"code":"var _jsxFileName = \"/Users/danielmiranda/PycharmProjects/timely/src/components/EmployeeHomePage.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/EmployeeHomePage.css';\nimport NavBar from \"./NavBar\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Moment from 'react-moment';\nimport Alert from 'react-bootstrap/Alert';\nimport axios from \"axios\";\nimport Collapse from 'react-bootstrap/Collapse';\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\nclass EmployeeHomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserInfo = () => {\n      axios.get(`${BASE_API_URL}timely_backend/current_user/`, {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        let currentUserInfo = response.data;\n        this.setState({\n          first_name: currentUserInfo.first_name,\n          profile_id: currentUserInfo.id,\n          is_loading: false\n        });\n      }).finally(() => {\n        this.getProfileInfo();\n      });\n    };\n\n    this.getProfileInfo = () => {\n      axios.get(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, {\n        params: {}\n      }) //setting profile information in state\n      .then(response => {\n        let profile = response.data;\n        this.setState({\n          profile: profile\n        }); //preferredName = profile['preferred_name']\n      }) //if theres an error console log it\n      .catch(error => {\n        console.log(error);\n      }) //After everything, set is-loading to false (removes loading spinner)\n      .finally(() => {\n        this.setState({\n          is_loading: false\n        });\n      });\n    };\n\n    this.clockIn = () => {\n      var moment = require('moment');\n\n      let todaysDate = moment().format('YYYY-MM-DD');\n      console.log(todaysDate);\n      let employee_id = this.state.profile_id;\n      let timeEntryData = {\n        \"date\": todaysDate,\n        \"late\": false,\n        \"employee\": employee_id // \"proficiency_rating\": rating,\n\n      };\n      console.log(timeEntryData);\n      axios.post(`${BASE_API_URL}api/time_entries/`, timeEntryData, {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          latest_time_entry_id: response.data.time_entry_id\n        });\n      }).finally(response => {\n        let employeeProfileUpdateData = {\n          \"clocked_in\": true,\n          \"current_shift\": this.state.latest_time_entry_id // \"proficiency_rating\": rating,\n\n        };\n        axios.patch(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, employeeProfileUpdateData, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n          }\n        }).then(response => {\n          console.log(response);\n          this.getProfileInfo();\n        }).catch(error => {\n          console.log(error);\n          console.log(error.response);\n        });\n      });\n    };\n\n    this.clockOut = () => {\n      var moment = require('moment');\n\n      let todaysDateAndTime = moment();\n      console.log(todaysDateAndTime);\n      let clockOutData = {\n        \"clock_out\": todaysDateAndTime\n      };\n      axios.patch(`${BASE_API_URL}api/time_entries/${this.state.profile.current_shift}/`, clockOutData, {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        }\n      }).then(response => {\n        console.log(response);\n      }).finally(response => {\n        let employeeProfileUpdateData = {\n          \"clocked_in\": false,\n          \"current_shift\": this.state.latest_time_entry_id // \"proficiency_rating\": rating,\n\n        };\n        axios.patch(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, employeeProfileUpdateData, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n          }\n        }).then(response => {\n          console.log(response);\n          this.getProfileInfo();\n        }).catch(error => {\n          console.log(error);\n          console.log(error.response);\n        });\n      });\n    };\n\n    this.state = {\n      api: 'http://localhost:8000/',\n      logged_in: localStorage.getItem('token') ? true : false,\n      profile: {\n        time_entries: ['']\n      }\n    };\n\n    var _moment = require('moment');\n  }\n\n  componentDidMount() {\n    if (this.state.logged_in === true) {\n      this.getUserInfo();\n    } else {\n      this.setState({\n        is_loading: false\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      logged_in: this.state.logged_in,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), this.state.logged_in === true ? React.createElement(Card, {\n      className: \"logInFormCard\",\n      bg: \"dark\",\n      text: \"white\",\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" Welcome to Timely, \", this.state.first_name, \"! \")), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Please select what you would like to do:\"), React.createElement(\"div\", {\n      className: \"timeEntryButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timeEntryButtonsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.profile.clocked_in == true ? React.createElement(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Clocked In\") : React.createElement(Button, {\n      onClick: this.clockIn,\n      className: \"timeEntryButton\",\n      variant: \"primary\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Clock In\"), React.createElement(Button, {\n      onClick: this.clockOut,\n      className: \"timeEntryButton\",\n      variant: \"secondary\",\n      size: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Clock Out\"))), React.createElement(\"div\", {\n      className: \"previousShifts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" Previous Shifts: \"), React.createElement(Accordion, {\n      className: \"timeEntryAccordion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.profile.time_entries.map(timeEntryInfo => {\n      const {\n        date,\n        clock_in,\n        clock_out,\n        late,\n        time_entry_id\n      } = timeEntryInfo;\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Accordion.Toggle, {\n        date: date,\n        clock_in: clock_in,\n        clock_out: clock_out,\n        late: late,\n        time_entry_id: time_entry_id,\n        as: Card.Header,\n        eventKey: time_entry_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"MM/DD/YYYY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, date)), React.createElement(Accordion.Collapse, {\n        eventKey: time_entry_id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"timeEntryDetailContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"clockIn timeEntryDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \" Clock In:\")), React.createElement(Moment, {\n        format: \"hh:mm A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, clock_in)), React.createElement(\"div\", {\n        className: \"clockOut timeEntryDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \" Clock Out:\")), clock_out == null ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \" Pending \") : React.createElement(Moment, {\n        format: \"hh:mm A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, clock_out)), React.createElement(\"div\", {\n        className: \"late timeEntryDetail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, `${this.props.late}` == true ? React.createElement(\"div\", {\n        className: 'alertContainer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        className: \"lateAlert\",\n        variant: 'danger',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Late\")) : React.createElement(\"div\", {\n        className: 'alertContainer',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        className: \"lateAlert\",\n        variant: 'info',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"On Time\")))))));\n    }))))) : React.createElement(Card, {\n      className: \"logInFormCard\",\n      bg: \"dark\",\n      text: \"white\",\n      style: {\n        width: '50%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Log-In Required\"), React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"You need to be logged-in to access this page.\"), React.createElement(LinkContainer, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Log In\")))));\n  }\n\n}\n\nexport default EmployeeHomePage;","map":{"version":3,"sources":["/Users/danielmiranda/PycharmProjects/timely/src/components/EmployeeHomePage.jsx"],"names":["React","Component","PropTypes","NavBar","Accordion","Card","Button","LinkContainer","Moment","Alert","axios","Collapse","BASE_API_URL","process","env","REACT_APP_BASE_URL","EmployeeHomePage","constructor","props","getUserInfo","get","headers","localStorage","getItem","then","response","currentUserInfo","data","setState","first_name","profile_id","id","is_loading","finally","getProfileInfo","state","params","profile","catch","error","console","log","clockIn","moment","require","todaysDate","format","employee_id","timeEntryData","post","latest_time_entry_id","time_entry_id","employeeProfileUpdateData","patch","clockOut","todaysDateAndTime","clockOutData","current_shift","api","logged_in","time_entries","componentDidMount","render","width","clocked_in","map","timeEntryInfo","date","clock_in","clock_out","late","Header"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/EmployeeHomePage.css';\nimport NavBar from \"./NavBar\";\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport Moment from 'react-moment';\nimport Alert from 'react-bootstrap/Alert'\nimport axios from \"axios\";\nimport Collapse from 'react-bootstrap/Collapse'\n\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL;\n\n\nclass EmployeeHomePage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            api: 'http://localhost:8000/',\n            logged_in: localStorage.getItem('token') ? true : false,\n            profile: {\n                time_entries: ['']\n            }\n        }\n\n        var moment = require('moment');\n    }\n\n    componentDidMount() {\n        if (this.state.logged_in === true) {\n            this.getUserInfo();\n\n\n        } else {\n            this.setState({is_loading: false});\n        }\n\n    }\n\n    getUserInfo = () => {\n\n        axios.get(`${BASE_API_URL}timely_backend/current_user/`, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                let currentUserInfo = response.data;\n                this.setState({\n                    first_name: currentUserInfo.first_name,\n                    profile_id: currentUserInfo.id,\n                    is_loading: false,\n                });\n\n            })\n            .finally(() => {\n                this.getProfileInfo();\n            });\n    };\n\n    getProfileInfo = () => {\n        axios.get(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, {\n            params: {}\n        })\n        //setting profile information in state\n            .then(response => {\n                let profile = response.data;\n                this.setState({profile: profile}); //preferredName = profile['preferred_name']\n            })\n            //if theres an error console log it\n            .catch(error => {\n                console.log(error);\n            })\n            //After everything, set is-loading to false (removes loading spinner)\n            .finally(() => {\n                this.setState({is_loading: false});\n\n            });\n\n\n    }\n\n\n    clockIn = () => {\n        var moment = require('moment');\n        let todaysDate = moment().format('YYYY-MM-DD')\n        console.log(todaysDate);\n        let employee_id = this.state.profile_id;\n\n\n        let timeEntryData = {\n            \"date\": todaysDate,\n            \"late\": false,\n            \"employee\": employee_id,\n            // \"proficiency_rating\": rating,\n        }\n\n        console.log(timeEntryData)\n        axios.post(`${BASE_API_URL}api/time_entries/`, timeEntryData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                console.log(response);\n                this.setState({\n                    latest_time_entry_id: response.data.time_entry_id\n\n                })\n\n            })\n\n\n            .finally((response) => {\n                let employeeProfileUpdateData = {\n                    \"clocked_in\": true,\n                    \"current_shift\": this.state.latest_time_entry_id\n                    // \"proficiency_rating\": rating,\n                }\n                axios.patch(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, employeeProfileUpdateData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n                    .then((response) => {\n                        console.log(response);\n                        this.getProfileInfo();\n\n                    })\n\n                    .catch((error) => {\n                        console.log(error);\n                        console.log(error.response);\n                    });\n\n\n            })\n    }\n\n\n    clockOut = () => {\n        var moment = require('moment');\n        let todaysDateAndTime = moment();\n        console.log(todaysDateAndTime);\n\n        let clockOutData = {\n            \"clock_out\": todaysDateAndTime,\n        }\n        axios.patch(`${BASE_API_URL}api/time_entries/${this.state.profile.current_shift}/`, clockOutData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n            .then((response) => {\n                console.log(response);\n\n            })\n            .finally((response) => {\n                let employeeProfileUpdateData = {\n                    \"clocked_in\": false,\n                    \"current_shift\": this.state.latest_time_entry_id\n                    // \"proficiency_rating\": rating,\n                }\n                axios.patch(`${BASE_API_URL}api/employees/${this.state.profile_id}/`, employeeProfileUpdateData, {headers: {\"Authorization\": `Bearer ${localStorage.getItem('token')}`}})\n                    .then((response) => {\n                        console.log(response);\n                        this.getProfileInfo();\n\n                    })\n\n                    .catch((error) => {\n                        console.log(error);\n                        console.log(error.response);\n                    });\n\n\n            })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <NavBar logged_in={this.state.logged_in}/>\n                {this.state.logged_in === true ? (\n                        <Card className=\"logInFormCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n                            <Card.Header><h3> Welcome to Timely, {this.state.first_name}! </h3></Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    Please select what you would like to do:\n                                </Card.Text>\n                                <div className={\"timeEntryButtons\"}>\n                                    <div className={\"timeEntryButtonsContainer\"}>\n                                        {this.state.profile.clocked_in == true ? (\n                                            <Button variant=\"primary\" size=\"lg\" disabled>\n                                                Clocked In\n                                            </Button>) : (\n                                            <Button onClick={this.clockIn} className={\"timeEntryButton\"} variant=\"primary\"\n                                                    size=\"lg\">\n                                                Clock In\n                                            </Button>)}\n\n                                        <Button onClick={this.clockOut} className={\"timeEntryButton\"} variant=\"secondary\"\n                                                size=\"lg\">\n                                            Clock Out\n                                        </Button>\n                                    </div>\n                                </div>\n                                <div className={\"previousShifts\"}>\n                                    <h1> Previous Shifts: </h1>\n                                    <Accordion className={\"timeEntryAccordion\"}>\n\n                                        {this.state.profile.time_entries.map(timeEntryInfo => {\n                                            const {date, clock_in, clock_out, late, time_entry_id} = timeEntryInfo;\n\n                                            return (\n\n                                                <Card>\n                                                    <Accordion.Toggle date={date} clock_in={clock_in}\n                                                                      clock_out={clock_out} late={late}\n                                                                      time_entry_id={time_entry_id} as={Card.Header}\n                                                                      eventKey={time_entry_id}>\n                                                        <Moment\n                                                            format=\"MM/DD/YYYY\">{date}</Moment>\n                                                    </Accordion.Toggle>\n                                                    <Accordion.Collapse eventKey={time_entry_id}>\n                                                        <Card.Body>\n                                                            <div className={\"timeEntryDetailContainer\"}>\n                                                                <div className={\"clockIn timeEntryDetail\"}>\n                                                                    <h6><b> Clock In:</b></h6>\n                                                                    <Moment\n                                                                        format=\"hh:mm A\">{clock_in}</Moment>\n                                                                </div>\n                                                                <div className={\"clockOut timeEntryDetail\"}>\n                                                                    <h6><b> Clock Out:</b></h6>\n                                                                    { clock_out == null? (<p> Pending </p> ) : ( <Moment\n                                                                        format=\"hh:mm A\">{clock_out}</Moment>) }\n\n\n                                                                </div>\n                                                                <div className={\"late timeEntryDetail\"}>\n\n                                                                    {`${this.props.late}` == true ? (\n                                                                        <div className={'alertContainer'}>\n                                                                            <Alert className={\"lateAlert\"}\n                                                                                   variant={'danger'}>\n                                                                                Late\n                                                                            </Alert>\n                                                                        </div>) : (\n                                                                        <div className={'alertContainer'}><Alert\n                                                                            className={\"lateAlert\"} variant={'info'}>\n                                                                            On Time\n                                                                        </Alert>\n                                                                        </div>)}\n                                                                </div>\n\n                                                            </div>\n                                                        </Card.Body>\n                                                    </Accordion.Collapse>\n                                                </Card>\n\n                                            )\n                                        })}\n                                    </Accordion>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    )\n\n                    : (<Card className=\"logInFormCard\" bg=\"dark\" text=\"white\" style={{width: '50%'}}>\n                        <Card.Header>Log-In Required</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                You need to be logged-in to access this page.\n                            </Card.Text>\n                            <LinkContainer to=\"/\">\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Log In\n                                </Button>\n                            </LinkContainer>\n\n                        </Card.Body>\n                    </Card>)\n\n                }\n            </div>\n        );\n    }\n}\n\n\nexport default EmployeeHomePage;"]},"metadata":{},"sourceType":"module"}